version: '3.5'

networks:
  meetup_network:

volumes:
  data:
    external: false
  elasticsearch-data:
    driver: local
  kibana-data:
    driver: local

services:
  db_postgres:
    container_name: db_postgres
    ports:
      - '5000:${POSTGRES_PORT}'
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    image: postgres:14.3-alpine
    volumes:
      - ./init-tables.sql:/docker-entrypoint-initdb.d/init.sql
      - data:/var/lib/postgresql/data
    networks:
      - meetup_network
  auth_service:
    container_name: auth_service
    ports:
      - '${AUTH_PORT}:${AUTH_PORT}'
    build:
      context: ./microservices/auth-service
      dockerfile: Dockerfile
    environment:
      - PORT=${AUTH_PORT}
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_HOST=db_postgres
      - DB_PORT=${POSTGRES_PORT}
      - DB_DATABASE=${POSTGRES_DB}
    networks:
      - meetup_network
    depends_on:
      - db_postgres
  meetup_service:
    container_name: meetup_service
    ports:
      - '${MEETUP_PORT}:${MEETUP_PORT}'
    build:
      context: ./microservices/meetup-service
      dockerfile: Dockerfile
    environment:
      - PORT=${MEETUP_PORT}
      - AUTH_HOST=auth_service
      - AUTH_PORT=${AUTH_PORT}
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_HOST=db_postgres
      - DB_PORT=${POSTGRES_PORT}
      - DB_DATABASE=${POSTGRES_DB}
      - ES_PORT=${ES_PORT}
      - ES_HOST=elasticsearch
    networks:
      - meetup_network
    depends_on:
      - db_postgres
      - elasticsearch
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ports:
      - '${ES_PORT}:${ES_PORT}'
    restart: always
    networks:
      - meetup_network
    ulimits:
      memlock:
        soft: -1
        hard: -1
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    volumes:
      - kibana-data:/usr/share/kibana/data
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:${ES_PORT}
      - KIBANA_PORT=${KB_PORT}
    networks:
      - meetup_network
    depends_on:
      - elasticsearch
    ports:
      - '${KB_PORT}:${KB_PORT}'
    restart: always
